@model SportGround.BusinessLogic.Models.UserModelWithPassword


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Reset password</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <hr />
        <div>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.FirstName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Email)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Email)
                </dd>

            </dl>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"  style="background-color: chartreuse"/>
            </div>
        </div>
    </div>
}

<div>
    @if (this.User.IsInRole("Admin"))
    {
        <a href="@Url.Action("Edit", "User", new {id = Model.Id})" class="btn btn-primary fa fa-pencil">
            <span>
                <strong>Edit</strong>
            </span>
        </a>
        <a href="@Url.Action("Index", "User")" class="btn btn-primary fa fa-pencil">
            <span>
                <strong>Back to List</strong>
            </span>
        </a>
    }
    else
    {
        <a href="@Url.Action("Edit", "User", new {id = Model.Id})" class="btn btn-primary fa fa-pencil">
            <span>
                <strong>Edit</strong>
            </span>
        </a>
        <a href="@Url.Action("Profile", "User")" class="btn btn-primary fa fa-pencil">
            <span>
                <strong>Back to Profile</strong>
            </span>
        </a>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
